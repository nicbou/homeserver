server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    ssl_certificate /etc/ssl/certs/cert-chain.crt;
    ssl_certificate_key /etc/ssl/certs/server.key;

    location = /favicon.ico {
        auth_request off;
        return 204;
        access_log     off;
        log_not_found  off;
    }

    error_page 401 = @error401;
    location @error401 {
        return 302 $scheme://$host/auth/?next=$request_uri;
    }

    auth_request /auth/verify/;

    location /auth/ {
        auth_request off;

        proxy_pass http://backend:80$uri$is_args$args;

        proxy_set_header Host $host$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Original-URI $request_uri;
        proxy_pass_header X-CSRFToken;
        proxy_redirect off;
    }

    location /static/ {
        alias /static/;
    }

    location /api/ {
        proxy_pass http://backend:80;
        proxy_set_header SCRIPT_NAME /api;
        proxy_redirect off;
    }

    location /admin/ {
        auth_request off;

        proxy_pass http://pihole:80;

        proxy_set_header Host pihole;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /movies/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range'; # Custom headers and headers various browsers *should* be OK with but aren't
            add_header 'Access-Control-Max-Age' 1728000;  # Tell client that this pre-flight info is valid for 20 days
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        }

        alias /movies/library/;
    }

    location /torrents {
        proxy_pass http://torrents:9091;
        proxy_pass_header X-Transmission-Session-Id;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /transmission/ {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_header X-Transmission-Session-Id;

        location /transmission/rpc {
            proxy_pass http://torrents:9091;
        }

        location /transmission/web/ {
            proxy_pass http://torrents:9091;
        }

        location /transmission/upload {
            proxy_pass http://torrents:9091;
        }
    }

    location / {
        proxy_pass http://frontend:80;
        proxy_redirect off;
    }
}